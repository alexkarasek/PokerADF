{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "akpshhfactory"
		},
		"integrationRuntime_akdev01": {
			"type": "string",
			"metadata": "Integration runtime name",
			"defaultValue": "akdev01"
		},
		"integrationRuntime_integrationRuntime2": {
			"type": "string",
			"metadata": "Integration runtime name",
			"defaultValue": "integrationRuntime2"
		},
		"integrationRuntime_integrationRuntime3": {
			"type": "string",
			"metadata": "Integration runtime name",
			"defaultValue": "integrationRuntime3"
		},
		"ADLSData_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSData'"
		},
		"BlobSrc_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobSrc'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"JSON_zipped_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'JSON_zipped'"
		},
		"SQLDW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLDW'"
		},
		"ADLSData_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://akpshhdatalake.dfs.core.windows.net"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\akdev01_admin"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "akdev01_admin"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://google.com"
		},
		"JSON_zipped_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://akpshhdatalake.dfs.core.windows.net"
		},
		"AzDev01Trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/1be2307a-3f38-4358-9243-da34bdd7eb2d/resourceGroups/ak-PSHandHistory/providers/Microsoft.Storage/storageAccounts/akpshharchive"
		},
		"EventTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/1be2307a-3f38-4358-9243-da34bdd7eb2d/resourceGroups/ak-PSHandHistory/providers/Microsoft.Storage/storageAccounts/akpshharchive"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/1be2307a-3f38-4358-9243-da34bdd7eb2d/resourceGroups/ak-PSHandHistory/providers/Microsoft.Storage/storageAccounts/akpshharchive"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Clone merged Parquet to DW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ADLSStruct_to_DW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ParquetStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDW_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\20190619\\Text2"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParquetStore')]",
				"[concat(variables('factoryId'), '/datasets/SQLDW_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy ADB parquet to DW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ADLSStruct_to_DW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GameActionId",
											"type": "Int64"
										},
										"sink": {
											"name": "gameactionid",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "String"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sitename",
											"type": "String"
										},
										"sink": {
											"name": "sitename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tablename",
											"type": "String"
										},
										"sink": {
											"name": "tablename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "limits",
											"type": "String"
										},
										"sink": {
											"name": "limits",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GameId",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "streetname",
											"type": "String"
										},
										"sink": {
											"name": "streetname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "action",
											"type": "String"
										},
										"sink": {
											"name": "action",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actor",
											"type": "String"
										},
										"sink": {
											"name": "actor",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Double"
										},
										"sink": {
											"name": "amount",
											"type": "Single"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ParquetStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDW_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Test\\Struct\\Sample2"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParquetStore')]",
				"[concat(variables('factoryId'), '/datasets/SQLDW_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy JSON to Parquet - merged')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_JSON_to_ADLSStruct",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['GameActionId']"
										},
										"sink": {
											"name": "GameActionId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['streetname']"
										},
										"sink": {
											"name": "streetname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['action']"
										},
										"sink": {
											"name": "action",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['actor']"
										},
										"sink": {
											"name": "actor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['timestamp']"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sitename']"
										},
										"sink": {
											"name": "sitename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tablename']"
										},
										"sink": {
											"name": "tablename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['limits']"
										},
										"sink": {
											"name": "limits",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['buttonseat']"
										},
										"sink": {
											"name": "butttonseat",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['actions']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONStore",
								"type": "DatasetReference",
								"parameters": {
									"jsonPath": "@pipeline().parameters.RawJSONStore"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ParquetStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\20190619\\Parquet"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSONStore')]",
				"[concat(variables('factoryId'), '/datasets/ParquetStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy JSON to Parquet - split')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_JSON_to_ADLSStruct",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['GameActionId']"
										},
										"sink": {
											"name": "GameActionId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['streetname']"
										},
										"sink": {
											"name": "streetname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['action']"
										},
										"sink": {
											"name": "action",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['actor']"
										},
										"sink": {
											"name": "actor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['timestamp']"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sitename']"
										},
										"sink": {
											"name": "sitename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tablename']"
										},
										"sink": {
											"name": "tablename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['limits']"
										},
										"sink": {
											"name": "limits",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['buttonseat']"
										},
										"sink": {
											"name": "butttonseat",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['actions']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONStore",
								"type": "DatasetReference",
								"parameters": {
									"jsonPath": "@pipeline().parameters.RawJSONStore"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ParquetStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\20190619\\Parquet2"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSONStore')]",
				"[concat(variables('factoryId'), '/datasets/ParquetStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy JSON to Text - merge')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_JSON_to_ADLSStruct",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['GameActionId']"
										},
										"sink": {
											"name": "GameActionId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['streetname']"
										},
										"sink": {
											"name": "streetname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['action']"
										},
										"sink": {
											"name": "action",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['actor']"
										},
										"sink": {
											"name": "actor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['timestamp']"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sitename']"
										},
										"sink": {
											"name": "sitename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tablename']"
										},
										"sink": {
											"name": "tablename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['limits']"
										},
										"sink": {
											"name": "limits",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['buttonseat']"
										},
										"sink": {
											"name": "butttonseat",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['actions']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONStore",
								"type": "DatasetReference",
								"parameters": {
									"jsonPath": "@pipeline().parameters.RawJSONStore"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TextStore",
								"type": "DatasetReference",
								"parameters": {
									"textPath": "@pipeline().parameters.TargetADLSStore"
								}
							}
						]
					}
				],
				"parameters": {
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\20190619\\Text"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSONStore')]",
				"[concat(variables('factoryId'), '/datasets/TextStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy JSON to Text - split')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_JSON_to_ADLSStruct",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['GameActionId']"
										},
										"sink": {
											"name": "GameActionId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['streetname']"
										},
										"sink": {
											"name": "streetname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['action']"
										},
										"sink": {
											"name": "action",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['actor']"
										},
										"sink": {
											"name": "actor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['timestamp']"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sitename']"
										},
										"sink": {
											"name": "sitename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tablename']"
										},
										"sink": {
											"name": "tablename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['limits']"
										},
										"sink": {
											"name": "limits",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['buttonseat']"
										},
										"sink": {
											"name": "butttonseat",
											"type": "Int64"
										}
									}
								],
								"collectionReference": "$['actions']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONStore",
								"type": "DatasetReference",
								"parameters": {
									"jsonPath": "@pipeline().parameters.RawJSONStore"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TextStore",
								"type": "DatasetReference",
								"parameters": {
									"textPath": "@pipeline().parameters.TargetADLSStore"
								}
							}
						]
					}
				],
				"parameters": {
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\20190619\\Text2"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JSONStore')]",
				"[concat(variables('factoryId'), '/datasets/TextStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy split CSV to DW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ADLSStruct_to_DW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"preCopyScript": "  drop table stg.hh\n\n    CREATE TABLE [stg].[HH] (\n        id varchar(20),\n    [timestamp] varchar(50),\n    sitename varchar(50),\n    tablename varchar(100),\n    limits varchar(50),\n    buttonseat bigint,\n    gameactionid bigint,\n    streetname varchar(100),\n    action varchar(20),\n    actor varchar(100),\n    amount float\n    )\nWITH  \n  (   \n   DISTRIBUTION = ROUND_ROBIN\n  )  ",
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 8,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "String"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sitename",
											"type": "String"
										},
										"sink": {
											"name": "sitename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tablename",
											"type": "String"
										},
										"sink": {
											"name": "tablename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "limits",
											"type": "String"
										},
										"sink": {
											"name": "limits",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "butttonseat",
											"type": "String"
										},
										"sink": {
											"name": "buttonseat",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "GameActionId",
											"type": "String"
										},
										"sink": {
											"name": "gameactionid",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "streetname",
											"type": "String"
										},
										"sink": {
											"name": "streetname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "action",
											"type": "String"
										},
										"sink": {
											"name": "action",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actor",
											"type": "String"
										},
										"sink": {
											"name": "actor",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "String"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "TextStore",
								"type": "DatasetReference",
								"parameters": {
									"textPath": "@pipeline().parameters.TargetADLSStore"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDW_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\20190619\\Text2"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TextStore')]",
				"[concat(variables('factoryId'), '/datasets/SQLDW_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy split Parquet to DW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ADLSStruct_to_DW",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"preCopyScript": "  drop table stg.hh\n\n    CREATE TABLE [stg].[HH] (\n        id varchar(20),\n    [timestamp] varchar(50),\n    sitename varchar(50),\n    tablename varchar(100),\n    limits varchar(50),\n    buttonseat bigint,\n    gameactionid bigint,\n    streetname varchar(100),\n    action varchar(20),\n    actor varchar(100),\n    amount float\n    )\nWITH  \n  (   \n   DISTRIBUTION = ROUND_ROBIN\n  )  ",
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int64"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"type": "String"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "sitename",
											"type": "String"
										},
										"sink": {
											"name": "sitename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "tablename",
											"type": "String"
										},
										"sink": {
											"name": "tablename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "limits",
											"type": "String"
										},
										"sink": {
											"name": "limits",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "butttonseat",
											"type": "Int64"
										},
										"sink": {
											"name": "buttonseat",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "GameActionId",
											"type": "Int32"
										},
										"sink": {
											"name": "gameactionid",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "streetname",
											"type": "String"
										},
										"sink": {
											"name": "streetname",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "action",
											"type": "String"
										},
										"sink": {
											"name": "action",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "actor",
											"type": "String"
										},
										"sink": {
											"name": "actor",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ParquetStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLDW_Sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\20190619\\Text2"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParquetStore')]",
				"[concat(variables('factoryId'), '/datasets/SQLDW_Sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataFromLocalToADLS-copyonly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Local_to_ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@{pipeline().parameters.localdir}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false,
							"parallelCopies": 32
						},
						"inputs": [
							{
								"referenceName": "LocalSrc",
								"type": "DatasetReference",
								"parameters": {
									"localPath": "@pipeline().parameters.localdir"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "JSONStore",
								"type": "DatasetReference",
								"parameters": {
									"jsonPath": "@pipeline().parameters.RawJSONStore"
								}
							}
						]
					}
				],
				"parameters": {
					"localdir": {
						"type": "string",
						"defaultValue": "E:\\Data\\PS\\HandHistory\\Bulk\\2019-06-19\\JSON"
					},
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\Text\\20190619"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LocalSrc')]",
				"[concat(variables('factoryId'), '/datasets/JSONStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataFromLocalToADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Local_to_Blobs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "@{pipeline().parameters.localdir}",
										"type": "Expression"
									},
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "LocalSrc",
								"type": "DatasetReference",
								"parameters": {
									"localPath": "@pipeline().parameters.localdir"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "JSONStore",
								"type": "DatasetReference",
								"parameters": {
									"jsonPath": "@pipeline().parameters.RawJSONStore"
								}
							}
						]
					},
					{
						"name": "Copy_JSON_to_ADLSStruct",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_Local_to_Blobs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['timestamp']"
										},
										"sink": {
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['sitename']"
										},
										"sink": {
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['tablename']"
										},
										"sink": {
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['limits']"
										},
										"sink": {
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['buttonseat']"
										},
										"sink": {
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "[['GameActionId']"
										},
										"sink": {
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "[['streetname']"
										},
										"sink": {
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "[['action']"
										},
										"sink": {
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "[['actor']"
										},
										"sink": {
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"ordinal": 11
										}
									}
								],
								"collectionReference": "$['actions']"
							}
						},
						"inputs": [
							{
								"referenceName": "JSONStore",
								"type": "DatasetReference",
								"parameters": {
									"jsonPath": "@pipeline().parameters.RawJSONStore"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ParquetStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"localdir": {
						"type": "string",
						"defaultValue": "E:\\Data\\PS\\HandHistory\\Bulk\\2019-06-19\\JSON"
					},
					"RawJSONStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Raw\\20190619"
					},
					"TargetADLSStore": {
						"type": "string",
						"defaultValue": "gamedata\\Data\\Struct\\Text\\20190619"
					}
				},
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LocalSrc')]",
				"[concat(variables('factoryId'), '/datasets/JSONStore')]",
				"[concat(variables('factoryId'), '/datasets/ParquetStore')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SetParams')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.*"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "RdyFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "start Import",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Lookup params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyDataFromLocalToADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"localdir": {
									"value": "@{activity('Lookup params').output.FirstRow.Prop_0}",
									"type": "Expression"
								},
								"RawJSONStore": {
									"value": "@{activity('Lookup params').output.FirstRow.Prop_1}",
									"type": "Expression"
								},
								"TargetADLSStore": {
									"value": "@{activity('Lookup params').output.FirstRow.Prop_2}",
									"type": "Expression"
								}
							}
						}
					}
				],
				"variables": {
					"blobpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RdyFile')]",
				"[concat(variables('factoryId'), '/pipelines/CopyDataFromLocalToADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_JSON_to_ADLSStruct",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['GameActionId']"
										},
										"sink": {
											"name": "GameActionId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['streetname']"
										},
										"sink": {
											"name": "streetname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['action']"
										},
										"sink": {
											"name": "action",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['actor']"
										},
										"sink": {
											"name": "actor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['amount']"
										},
										"sink": {
											"name": "amount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "$['timestamp']"
										},
										"sink": {
											"name": "timestamp",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sitename']"
										},
										"sink": {
											"name": "sitename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['tablename']"
										},
										"sink": {
											"name": "tablename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['limits']"
										},
										"sink": {
											"name": "limits",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['buttonseat']"
										},
										"sink": {
											"name": "butttonseat",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"boblpath": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/Binary2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "JSON_zipped",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "2019-06-19.zip",
						"folderPath": "Data/Raw",
						"fileSystem": "gamedata"
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Fastest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/JSON_zipped')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "JSON_zipped",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Data/Test/Struct/Sample3",
						"fileSystem": "gamedata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/JSON_zipped')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DebugTarget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Data/Test/Debug",
						"fileSystem": "gamedata"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSONStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSData",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"jsonPath": {
						"type": "string",
						"defaultValue": "@pipeline().parameters.RawJSONStore"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().jsonPath",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"timestamp": {
							"type": "string"
						},
						"sitename": {
							"type": "string"
						},
						"tablename": {
							"type": "string"
						},
						"limits": {
							"type": "string"
						},
						"buttonseat": {
							"type": "integer"
						},
						"seats": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"playername": {
										"type": "string"
									},
									"seatno": {
										"type": "integer"
									},
									"position": {
										"type": "null"
									}
								}
							}
						},
						"actions": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"GameActionId": {
										"type": "integer"
									},
									"streetname": {
										"type": "string"
									},
									"action": {
										"type": "string"
									},
									"actor": {
										"type": "string"
									},
									"amount": {
										"type": "number"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1_compressed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "JSON_zipped",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "2019-06-19.zip",
						"folderPath": "Data/Raw",
						"fileSystem": "gamedata"
					},
					"compression": {
						"type": "deflate"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"timestamp": {
							"type": "string"
						},
						"sitename": {
							"type": "string"
						},
						"tablename": {
							"type": "string"
						},
						"limits": {
							"type": "string"
						},
						"buttonseat": {
							"type": "integer"
						},
						"seats": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"playername": {
										"type": "string"
									},
									"seatno": {
										"type": "integer"
									},
									"position": {
										"type": "null"
									}
								}
							}
						},
						"actions": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"GameActionId": {
										"type": "integer"
									},
									"streetname": {
										"type": "string"
									},
									"action": {
										"type": "string"
									},
									"actor": {
										"type": "string"
									},
									"amount": {
										"type": "number"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/JSON_zipped')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1_unzipped')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "JSON_zipped",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Data/Test/Struct/Sample3",
						"fileSystem": "gamedata"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/JSON_zipped')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalSrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"localPath": {
						"type": "string",
						"defaultValue": "@pipeline().parameters.localdir"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().localPath",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParquetStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSData",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"parquetPath": {
						"type": "string",
						"defaultValue": "@pipeline().parameters.TargetADLSStore"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().parquetPath",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "GameActionId",
						"type": "INT32"
					},
					{
						"name": "streetname",
						"type": "UTF8"
					},
					{
						"name": "action",
						"type": "UTF8"
					},
					{
						"name": "actor",
						"type": "UTF8"
					},
					{
						"name": "amount",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "id",
						"type": "INT64"
					},
					{
						"name": "timestamp",
						"type": "UTF8"
					},
					{
						"name": "sitename",
						"type": "UTF8"
					},
					{
						"name": "tablename",
						"type": "UTF8"
					},
					{
						"name": "limits",
						"type": "UTF8"
					},
					{
						"name": "butttonseat",
						"type": "INT64"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RdyFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*.rdy",
						"folderPath": "Processing/Flags",
						"fileSystem": "gamedata"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDW_Sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "timestamp",
						"type": "varchar"
					},
					{
						"name": "sitename",
						"type": "varchar"
					},
					{
						"name": "tablename",
						"type": "varchar"
					},
					{
						"name": "limits",
						"type": "varchar"
					},
					{
						"name": "buttonseat",
						"type": "int",
						"precision": 10
					},
					{
						"name": "gameactionid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "streetname",
						"type": "varchar"
					},
					{
						"name": "action",
						"type": "varchar"
					},
					{
						"name": "actor",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 9,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "HH"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TextStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSData",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"textPath": {
						"type": "string",
						"defaultValue": "@pipeline().parameters.TargetADLSStore"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().textPath",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSData_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSData_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobSrc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobSrc_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "[parameters('integrationRuntime_integrationRuntime3')]",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/', parameters('integrationRuntime_integrationRuntime3'))]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSON_zipped')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('JSON_zipped_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('JSON_zipped_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('SQLDW_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzDev01Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyDataFromLocalToADLS",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/pshharchive/blobs/",
					"blobPathEndsWith": "Flags/azdev01.rdy",
					"scope": "[parameters('AzDev01Trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyDataFromLocalToADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EventTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/pshharchive/blobs/",
					"blobPathEndsWith": "Flags/test.rdy",
					"scope": "[parameters('EventTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/pshharchive/blobs/",
					"blobPathEndsWith": "Flags/test.rdy",
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_akdev01'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_integrationRuntime2'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_integrationRuntime3'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}